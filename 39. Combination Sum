public class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> cur = new ArrayList<>();
        if(candidates == null || candidates.length == 0 || target <= 0) return res;
        Arrays.sort(candidates);
        getResult(res,cur,candidates,target,0);
        return res;
    }
    
    private void getResult(List<List<Integer>> result, List<Integer> cur, int candidates[], int target, int start){
    	if(target > 0){
    		for(int i = start; i < candidates.length && target >= candidates[i]; i++){
    			cur.add(candidates[i]);
    			getResult(result, cur, candidates, target - candidates[i], i);
    			cur.remove(cur.size() - 1);
    		}
    	}
    	else if(target == 0 ){
    		result.add(new ArrayList<Integer>(cur));
    	}
    }
    
}
